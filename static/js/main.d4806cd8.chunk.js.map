{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","hash","style","height","padding","justifyContent","display","margin","alignItems","src","title","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","className","persik","alt","decodeURIComponent","window","location","split","err","console","log","App","useState","activePanel","setUser","getToken","setToken","popout","setPopout","a","querystring","require","connect","sendPromise","upload_server","response","upload_url","user_id","axios","post","stringify","photo","upload","data","server","caption","save","owner_id","attachments","useEffect","user","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","access_token","send","fetchData","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d4806cd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","\n\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\n\n\n\n\nconst Home = ({ id, go, fetchedUser, hash}) => (\n\t<div id={id} style={{\n\t\theight:\"100%\",\n\t\tpadding:\"10px\"\n\t}}>\n\n\n\t\t{fetchedUser &&\n            <div style={{justifyContent: 'center', display:'flex',  padding:\"10px\", margin:\"10px\", alignItems: 'center'}}>\n\t\t\t\t<img style={{\n\t\t\t\t\t\"width\":\"calc(95vmin)\",\n\t\t\t\t\t\"border-radius\":\"3%\"\n\t\t\t\t}} src={hash}/>\n\t\t\t</div>\n        }\n\n\n\n\t\t<Group title=\"\" style={{\n\t\t}}>\n\t\t\t<Button size=\"xl\" level=\"1\" onClick={go} data-to=\"persik\" style={{\t\t\t}}>\n\t\t\t\tСохранить фото\n\t\t\t</Button>\n\n\n\t\t</Group>\n\n\n\t</div>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport axios from 'axios';\n\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\n\nfunction  hash(){\n\ttry\n    {\n        let encoded = decodeURIComponent(window.location.hash.split(\"#\")[1]);\n        return encoded;\n    }catch(err){\n\t\tconsole.log(err);\n\t}\n}\n\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [getToken, setToken] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\n            if (type === 'VKWebAppAccessTokenReceived') {\n                setToken(data.access_token);\n\t\t\t}\n\t\t});\n\n        connect.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7177213, \"scope\": \"wall,photos\"});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tasync function go(){\n\n        const querystring = require('querystring');\n\n        let upload_server = await connect.sendPromise(\"VKWebAppCallAPIMethod\",{\"method\": \"photos.getWallUploadServer\", \"request_id\": \"32test\", \"params\": {\"v\":\"5.102\", \"access_token\":getToken}});\n        let {upload_url, user_id} = upload_server.response;\n\n        let upload = await axios.post('https://publes.ru/mini_apps/vk_upload.php', querystring.stringify({ upload_url, user_id, photo:hash() }));\n        console.log({upload});\n\n        const save = await connect.sendPromise(\"VKWebAppCallAPIMethod\",{\"method\": \"photos.saveWallPhoto\", \"request_id\": \"33test\", \"params\": {\"v\":\"5.102\", \"access_token\":getToken, \"user_id\":user_id, photo:upload.data.photo, hash:upload.data.hash, server:upload.data.server, caption:\"@art_privet(Создать такой арт)\"}});\n\n        let {id,owner_id} = save.response[0];\n        let attachments = \"photo\"+owner_id+\"_\"+id\n\n        //photos.saveWallPhoto\n        console.log({save})\n\n\n        const post = await connect.sendPromise(\"VKWebAppShowWallPostBox\",{\"message\":\"# @art_privet(Арт)\",attachments});\n        console.log({post});\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} hash={hash()} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}