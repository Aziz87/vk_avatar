{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","style","height","padding","justifyContent","display","margin","alignItems","src","photo_200","title","size","level","onClick","data-to","window","location","hash","osName","platform","Persik","props","left","IOS","className","persik","alt","App","useState","activePanel","setUser","getToken","setToken","popout","setPopout","useEffect","a","connect","sendPromise","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","access_token","send","fetchData","e","api","console","log","fetchJsonp","then","res","json","catch","ReactDOM","render","getElementById"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,oC,mjBCqB3C,IA6CeC,EA7CF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACZ,yBAAKF,GAAIA,EAAIG,MAAO,CACnBC,OAAO,OACPC,QAAQ,SAIPH,GACS,yBAAKC,MAAO,CAACG,eAAgB,SAAUC,QAAQ,OAASF,QAAQ,OAAQG,OAAO,OAAQC,WAAY,WAC3G,yBAAKN,MAAO,CACX,MAAQ,aACR,YAAY,QACZ,gBAAgB,UACdO,IAAKR,EAAYS,aAMtB,kBAAC,IAAD,CAAOC,MAAM,kMAAuCT,MAAO,IAE1D,kBAAC,IAAD,CAAQU,KAAK,KAAKC,MAAM,IAAIC,QAASd,EAAIe,UAAQ,SAASb,MAAO,IAAjE,gEAFD,iEAxBMc,OAAOC,SAASC,Q,iHCJlBC,G,OAASC,eAoBAC,EAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOvB,GAAIuB,EAAMvB,IAChB,kBAAC,IAAD,CACCwB,KAAM,kBAAC,IAAD,CAAcT,QAASQ,EAAMtB,GAAIe,UAAQ,QAC7CI,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKC,UAAU,SAAShB,IAAKiB,IAAQC,IAAI,qBCuC5BC,EAnDH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,aAEcD,mBAAS,OAFvB,mBAEV5B,EAFU,KAEG8B,EAFH,OAGYF,mBAAS,MAHrB,mBAGVG,EAHU,KAGAC,EAHA,OAIWJ,mBAAS,kBAAC,IAAD,CAAejB,KAAK,WAJxC,mBAIVsB,EAJU,KAIFC,EAJE,KAMjBC,qBAAU,WAAM,4CAef,4BAAAC,EAAA,sEACoBC,IAAQC,YAAY,uBADxC,OACOC,EADP,OAECT,EAAQS,GACRL,EAAU,MAHX,4CAfe,sBACfG,IAAQG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACpC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,GAGjB,gCAATF,GACAV,EAASW,EAAKS,iBAItBf,IAAQgB,KAAK,uBAAwB,CAAC,OAAU,QAAS,MAAS,SAbzD,mCAoBfC,KACE,IAEH,IAAMvD,EAAK,SAAAwD,GAEJ,IAAIC,EAAG,kEAA8DzB,EAA9D,2BAEP0B,QAAQC,IAAI,CAACF,QACbG,IAAWH,GACNI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAjB,GAAI,OAAIc,QAAQC,IAAIf,MACzBoB,OAAM,SAAAR,GAAC,MAAI,OAMvB,OACC,kBAAC,IAAD,CAAM1B,YAAaA,EAAaI,OAAQA,GACvC,kBAAC,EAAD,CAAMnC,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,MChD3BsC,IAAQgB,KAAK,gBAQbW,IAASC,OAAO,kBAAC,EAAD,MAASpB,SAASqB,eAAe,W","file":"static/js/main.5b73edd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","\n\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\n\nfunction hash(){\n\treturn window.location.hash;\n}\n\n\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<div id={id} style={{\n\t\theight:\"100%\",\n\t\tpadding:\"10px\"\n\t}}>\n\n\n\t\t{fetchedUser &&\n            <div style={{justifyContent: 'center', display:'flex',  padding:\"10px\", margin:\"10px\", alignItems: 'center'}}>\n\t\t\t\t<img style={{\n\t\t\t\t\t\"width\":\"calc(70vh)\",\n\t\t\t\t\t\"max-width\":\"200px\",\n\t\t\t\t\t\"border-radius\":\"1000px\"\n\t\t\t\t}} src={fetchedUser.photo_200}/>\n\t\t\t</div>\n        }\n\n\n\n\t\t<Group title=\"Установить в качестве главного фото?\" style={{\n\t\t}}>\n\t\t\t<Button size=\"xl\" level=\"1\" onClick={go} data-to=\"persik\" style={{\t\t\t}}>\n\t\t\t\tУстановить\n\t\t\t</Button>\n\n\t\t\tЗдравствуй, {hash()}\n\t\t</Group>\n\n\n\t</div>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport fetchJsonp from 'fetch-jsonp';\n\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [getToken, setToken] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\n            if (type === 'VKWebAppAccessTokenReceived') {\n                setToken(data.access_token);\n\t\t\t}\n\t\t});\n\n        connect.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7177213, \"scope\": \"wall\"});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\n        let api = `https://api.vk.com/method/wall.post?v=5.52&access_token=${getToken}&message='test message'`;\n\n        console.log({api});\n        fetchJsonp(api)\n            .then(res => res.json())\n            .then(data => console.log(data))\n            .catch(e => [])\n\n\n\t\t//setActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}